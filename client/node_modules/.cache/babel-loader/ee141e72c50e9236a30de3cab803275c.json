{"ast":null,"code":"var _jsxFileName = \"/Users/oscar/Desktop/Tempify/Tempify/client/src/components/Register/Register.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport './Register.css';\n\nconst useStyles = theme => ({\n  textField: {\n    width: '100%',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  label: {\n    '&$focused': {\n      color: '#00bfff'\n    }\n  },\n  labelAsterisk: {\n    color: '#ff0000'\n  },\n  focused: {},\n  outlinedInput: {\n    '&$focused $notchedOutline': {\n      border: '1px solid #00bfff'\n    }\n  },\n  notchedOutline: {},\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  }\n});\n\nconst city = [{\n  value: 'none',\n  label: '- Select city? -',\n  disabled: 'true'\n}, {\n  value: 'Vancouver',\n  label: 'Vancouver'\n}, {\n  value: 'North Vancouver',\n  label: 'North Vancouver'\n}, {\n  value: 'Burnaby',\n  label: 'Burnaby'\n}];\nconst youdo = [{\n  value: 'none',\n  label: '- What do you do? -'\n}, {\n  value: 'Assistant',\n  label: 'Assistant'\n}, {\n  value: 'Registered Dental Hygienist',\n  label: 'Registered Dental Hygienist'\n}, {\n  value: 'Receptionist',\n  label: 'Receptionist'\n}];\nconst practice = [{\n  value: 'none',\n  label: '- Type of Practice? -',\n  disabled: 'true'\n}, {\n  value: 'General',\n  label: 'General'\n}, {\n  value: 'Ortho',\n  label: 'Ortho'\n}, {\n  value: 'Endo',\n  label: 'Endo'\n}];\nconst dentalsw = [{\n  value: 'none',\n  label: '- Dental Software Used -',\n  disabled: 'true'\n}, {\n  value: 'Dentrix',\n  label: 'Dentrix'\n}, {\n  value: 'Cleardent',\n  label: 'Cleardent'\n}, {\n  value: 'Tracker',\n  label: 'Tracker'\n}];\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleExpChange = changeEvent => {\n      this.setState({\n        exp: changeEvent.target.value\n      });\n    };\n\n    this.handleCityChange = changeEvent => {\n      this.setState({\n        city: changeEvent.target.value\n      });\n    };\n\n    this.handleYoudoChange = changeEvent => {\n      this.setState({\n        youdo: changeEvent.target.value\n      });\n    };\n\n    this.handlePracticeChange = changeEvent => {\n      this.setState({\n        practice: changeEvent.target.value\n      });\n    };\n\n    this.handleDentalSWChange = changeEvent => {\n      this.setState({\n        dentalsw: changeEvent.target.value\n      });\n    };\n\n    this.state = {\n      exp: '',\n      city: '',\n      youdo: '',\n      practice: '',\n      dentalsw: ''\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: \"center\",\n      className: \"header1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"TEMP REGISTRATION\"), React.createElement(Grid, {\n      container: true,\n      spacing: 6,\n      className: \"container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      id: \"name\",\n      name: \"name\",\n      label: \"Required\",\n      placeholder: \"Your name?\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"name\",\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      name: \"email\",\n      label: \"Required\",\n      placeholder: \"Email address\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"email\",\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Required\",\n      placeholder: \"Password\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      id: \"cPassword\",\n      name: \"cPassword\",\n      type: \"password\",\n      label: \"Required\",\n      placeholder: \"Confirm password\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      id: \"experience\",\n      name: \"experience\",\n      type: \"number\",\n      label: \"Required\",\n      placeholder: \"Years of experience\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: this.state.exp,\n      onChange: e => {\n        this.handleExpChange(e);\n      },\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      id: \"expRate\",\n      name: \"expRate\",\n      label: \"Required\",\n      placeholder: \"Expected rate [$]\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: this.state.exp,\n      onChange: e => {\n        this.handleExpChange(e);\n      },\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      select: true,\n      id: \"city\",\n      name: \"city\",\n      label: \"Required\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      defaultValue: \"none\",\n      value: this.state.city,\n      onChange: e => {\n        this.handleCityChange(e);\n      },\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, city.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      disabled: option.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      select: true,\n      id: \"youdo\",\n      name: \"youdo\",\n      label: \"Required\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      defaultValue: \"none\",\n      value: this.state.youdo,\n      onChange: e => {\n        this.handleYoudoChange(e);\n      },\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, youdo.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      id: \"license\",\n      name: \"license\",\n      label: \"Required\",\n      placeholder: \"License number?\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      select: true,\n      id: \"practice\",\n      name: \"practice\",\n      label: \"Required\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      defaultValue: \"none\",\n      value: this.state.practice,\n      onChange: e => {\n        this.handlePracticeChange(e);\n      },\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, practice.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      disabled: option.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      fullWidth: true,\n      select: true,\n      id: \"dentalsw\",\n      name: \"dentalsw\",\n      label: \"Required\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      defaultValue: \"none\",\n      value: this.state.dentalsw,\n      onChange: e => {\n        this.handleDentalSWChange(e);\n      },\n      InputLabelProps: {\n        shrink: true,\n        classes: {\n          root: classes.label,\n          focused: classes.focused,\n          asterisk: classes.labelAsterisk\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, dentalsw.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      disabled: option.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, option.label)))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      className: \"container2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \"./image/*\",\n      id: \"image-upload\",\n      multiple: true,\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        color: \"secondary\",\n        name: \"saveAddress\",\n        value: \"yes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }),\n      label: \"I Accept\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }), React.createElement(Link, {\n      component: \"button\",\n      variant: \"body2\",\n      onClick: () => {\n        alert(\"Hi, I'm Terms and conditions.\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, \"Terms and Conditions\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"blueButton\",\n      color: \"primary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, \"SUBMIT FORM\")))));\n  }\n\n}\n\nexport default withStyles(useStyles)(Register);","map":{"version":3,"sources":["/Users/oscar/Desktop/Tempify/Tempify/client/src/components/Register/Register.js"],"names":["React","Grid","Typography","TextField","FormControlLabel","Checkbox","withStyles","FormControl","Select","MenuItem","InputLabel","Button","Link","useStyles","theme","textField","width","marginLeft","spacing","marginRight","label","color","labelAsterisk","focused","outlinedInput","border","notchedOutline","button","margin","input","display","city","value","disabled","youdo","practice","dentalsw","Register","Component","constructor","props","handleExpChange","changeEvent","setState","exp","target","handleCityChange","handleYoudoChange","handlePracticeChange","handleDentalSWChange","state","render","classes","shrink","root","asterisk","e","map","option","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport './Register.css'\n\nconst useStyles = theme => ({\n  textField: {\n    width: '100%',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  label: {\n    '&$focused': {\n      color: '#00bfff'\n    },\n  },\n  labelAsterisk: {\n    color: '#ff0000'\n  },\n  focused: {},\n  outlinedInput: {\n    '&$focused $notchedOutline': {\n      border: '1px solid #00bfff'\n    },\n  },\n  notchedOutline: {},\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nconst city = [\n  {\n    value: 'none',\n    label: '- Select city? -',\n    disabled: 'true',\n  },\n  {\n    value: 'Vancouver',\n    label: 'Vancouver',\n  },\n  {\n    value: 'North Vancouver',\n    label: 'North Vancouver',\n  },\n  {\n    value: 'Burnaby',\n    label: 'Burnaby',\n  },\n];\n\nconst youdo = [\n  {\n    value: 'none',\n    label: '- What do you do? -',\n  },\n  {\n    value: 'Assistant',\n    label: 'Assistant',\n  },\n  {\n    value: 'Registered Dental Hygienist',\n    label: 'Registered Dental Hygienist',\n  },\n  {\n    value: 'Receptionist',\n    label: 'Receptionist',\n  },\n];\n\nconst practice = [\n  {\n    value: 'none',\n    label: '- Type of Practice? -',\n    disabled: 'true',\n  },\n  {\n    value: 'General',\n    label: 'General',\n  },\n  {\n    value: 'Ortho',\n    label: 'Ortho',\n  },\n  {\n    value: 'Endo',\n    label: 'Endo',\n  },\n];\n\nconst dentalsw = [\n  {\n    value: 'none',\n    label: '- Dental Software Used -',\n    disabled: 'true',\n  },\n  {\n    value: 'Dentrix',\n    label: 'Dentrix',\n  },\n  {\n    value: 'Cleardent',\n    label: 'Cleardent',\n  },\n  {\n    value: 'Tracker',\n    label: 'Tracker',\n  },\n];\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      exp: '',\n      city: '',\n      youdo: '',\n      practice: '',\n      dentalsw: '',\n    }\n  }\n\n  handleExpChange = (changeEvent) => {\n    this.setState({\n      exp: changeEvent.target.value\n    });\n  }\n\n  handleCityChange = (changeEvent) => {\n    this.setState({\n      city: changeEvent.target.value\n    });\n  }\n\n  handleYoudoChange = (changeEvent) => {\n    this.setState({\n      youdo: changeEvent.target.value\n    });\n  }\n\n  handlePracticeChange = (changeEvent) => {\n    this.setState({\n      practice: changeEvent.target.value\n    });\n  }\n\n  handleDentalSWChange = (changeEvent) => {\n    this.setState({\n      dentalsw: changeEvent.target.value\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className=\"register\">\n        <React.Fragment>\n\n          <Typography align=\"center\" className=\"header1\">\n            TEMP REGISTRATION\n          </Typography>\n\n          <Grid container spacing={6} className=\"container1\">\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                id=\"name\"\n                name=\"name\"\n                label=\"Required\"\n                placeholder=\"Your name?\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"name\"\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                name=\"email\"\n                label=\"Required\"\n                placeholder=\"Email address\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"email\"\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                label=\"Required\"\n                placeholder=\"Password\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                id=\"cPassword\"\n                name=\"cPassword\"\n                type=\"password\"\n                label=\"Required\"\n                placeholder=\"Confirm password\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                id=\"experience\"\n                name=\"experience\"\n                type=\"number\"\n                label=\"Required\"\n                placeholder=\"Years of experience\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.exp}\n                onChange={(e) => {this.handleExpChange(e);}}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                id=\"expRate\"\n                name=\"expRate\"\n                label=\"Required\"\n                placeholder=\"Expected rate [$]\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.exp}\n                onChange={(e) => {this.handleExpChange(e);}}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                select\n                id=\"city\"\n                name=\"city\"\n                label=\"Required\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.city}\n                onChange={(e) => {this.handleCityChange(e);}}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n                {city.map(option => (\n                  <MenuItem key={option.value} value={option.value} disabled={option.disabled}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                select\n                id=\"youdo\"\n                name=\"youdo\"\n                label=\"Required\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.youdo}\n                onChange={(e) => {this.handleYoudoChange(e);}}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n                {youdo.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                id=\"license\"\n                name=\"license\"\n                label=\"Required\"\n                placeholder=\"License number?\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                select\n                id=\"practice\"\n                name=\"practice\"\n                label=\"Required\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.practice}\n                onChange={(e) => {this.handlePracticeChange(e);}}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n                {practice.map(option => (\n                  <MenuItem key={option.value} value={option.value} disabled={option.disabled}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextField\n                required\n                fullWidth\n                select\n                id=\"dentalsw\"\n                name=\"dentalsw\"\n                label=\"Required\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.dentalsw}\n                onChange={(e) => {this.handleDentalSWChange(e);}}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n                {dentalsw.map(option => (\n                  <MenuItem key={option.value} value={option.value} disabled={option.disabled}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <input\n                accept=\"./image/*\"\n                id=\"image-upload\"\n                multiple\n                type=\"file\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\n                label=\"I Accept\"\n              />\n              <Link\n                component=\"button\"\n                variant=\"body2\"\n                onClick={() => {\n                  alert(\"Hi, I'm Terms and conditions.\");\n                }}>\n                Terms and Conditions\n              </Link>\n            </Grid>\n            <Grid item xs={12} align=\"center\">\n              <Button className=\"blueButton\" color=\"primary\" variant=\"contained\">\n                SUBMIT FORM\n              </Button>\n            </Grid>\n          </Grid>\n        </React.Fragment>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(useStyles)(Register);"]},"metadata":{},"sourceType":"module"}