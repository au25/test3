{"ast":null,"code":"import _defineProperty from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import TextField from'@material-ui/core/TextField';import FormControlLabel from'@material-ui/core/FormControlLabel';import Checkbox from'@material-ui/core/Checkbox';import{withStyles}from'@material-ui/core/styles';import MenuItem from'@material-ui/core/MenuItem';import Button from'@material-ui/core/Button';import Link from'@material-ui/core/Link';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import'./Register.css';import CheckboxValidatorElement from'../CheckboxValidatorElement/CheckboxValidatorElement';var useStyles=function useStyles(theme){return{textField:{width:'100%',marginLeft:theme.spacing(1),marginRight:theme.spacing(1)},label:{'&$focused':{color:'#00bfff'}},labelAsterisk:{color:'#ff0000'},focused:{},outlinedInput:{'&$focused $notchedOutline':{border:'1px solid #00bfff'}},notchedOutline:{},button:{margin:theme.spacing(1)},input:{display:'none'}};};var parking=[{value:'Free',label:'Free'},{value:'Paid/Street',label:'Paid/Street'},{value:'No Parking',label:'No Parking'}];var Register=/*#__PURE__*/function(_React$Component){_inherits(Register,_React$Component);function Register(props){var _this;_classCallCheck(this,Register);_this=_possibleConstructorReturn(this,_getPrototypeOf(Register).call(this,props));_this.submitForm=function(event){event.preventDefault();var data={officeName:_this.state.officeName,email:_this.state.email,password:_this.state.password,name:_this.state.name,phone:_this.state.phone,streetNo:_this.state.streetNo,streetName:_this.state.streetName,unit:_this.state.unit,city:_this.state.city,province:_this.state.province,postalCode:_this.state.postalCode,parking:_this.state.parking};fetch(\"http://localhost:3001/dentalRegister\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){console.log(response);}).then(function(data){console.log(data);}).catch(function(err){console.log(err);});_this.props.history.push(\"/\");};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.handleCheckboxChange=function(e){_this.setState({accept:e.target.checked});};_this.state={officeName:'',email:'',password:'',confirmPassword:'',name:'',phone:'',streetNo:'',streetName:'',unit:'',city:'',province:'',postalCode:'',parking:parking[0].value};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(Register,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;ValidatorForm.addValidationRule('isPasswordMatch',function(value){if(value!==_this2.state.password){return false;}return true;});ValidatorForm.addValidationRule('isTruthy',function(value){return value;});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ValidatorForm.removeValidationRule('isPasswordMatch');ValidatorForm.removeValidationRule('isTruthy');}},{key:\"render\",value:function render(){var _this3=this;var classes=this.props.classes;return React.createElement(\"div\",{className:\"register\"},React.createElement(ValidatorForm,{ref:\"form\",onSubmit:function onSubmit(e){return _this3.submitForm(e);}},React.createElement(Typography,{align:\"center\",className:\"header1\"},\"DENTAL OFFICE REGISTRATION\"),React.createElement(Grid,{container:true,spacing:6,className:\"container1\"},React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"officeName\",name:\"officeName\",value:this.state.officeName,label:\"Office Name\",className:classes.textField,margin:\"normal\",variant:\"outlined\",autoComplete:\"name\",validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"email\",name:\"email\",value:this.state.email,label:\"Email address\",className:classes.textField,margin:\"normal\",variant:\"outlined\",autoComplete:\"email\",validators:['required','isEmail'],errorMessages:['This field is required','This is not a valid email'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"password\",name:\"password\",value:this.state.password,type:\"password\",label:\"Password\",className:classes.textField,margin:\"normal\",variant:\"outlined\",validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"confirmPassword\",name:\"confirmPassword\",value:this.state.confirmPassword,type:\"password\",label:\"Confirm password\",className:classes.textField,margin:\"normal\",variant:\"outlined\",validators:['required','isPasswordMatch'],errorMessages:['This field is required','Passwords do not match'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"name\",name:\"name\",value:this.state.name,label:\"Your name\",className:classes.textField,margin:\"normal\",variant:\"outlined\",autoComplete:\"name\",validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"phone\",name:\"phone\",label:\"Phone\",className:classes.textField,margin:\"normal\",variant:\"outlined\",value:this.state.phone,validators:['required','minStringLength:10','minStringLength:10','isNumber'],errorMessages:['This field is required','Value should be 10 digits','Value should be 10 digits','Must be a number'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"streetNo\",name:\"streetNo\",label:\"Street Number\",className:classes.textField,margin:\"normal\",variant:\"outlined\",defaultValue:\"none\",value:this.state.streetNo,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"streetName\",name:\"streetName\",label:\"Street Name\",className:classes.textField,margin:\"normal\",variant:\"outlined\",defaultValue:\"none\",value:this.state.streetName,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"unit\",name:\"unit\",value:this.state.unit,label:\"Unit\",className:classes.textField,margin:\"normal\",variant:\"outlined\",validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"city\",name:\"city\",label:\"City\",className:classes.textField,margin:\"normal\",variant:\"outlined\",defaultValue:\"none\",value:this.state.city,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"province\",name:\"province\",label:\"Province\",className:classes.textField,margin:\"normal\",variant:\"outlined\",defaultValue:\"none\",value:this.state.province,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"postalCode\",name:\"postalCode\",label:\"Postal Code\",className:classes.textField,margin:\"normal\",variant:\"outlined\",defaultValue:\"none\",value:this.state.postalCode,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,select:true,id:\"parking\",name:\"parking\",label:\"Parking\",className:classes.textField,margin:\"normal\",variant:\"outlined\",defaultValue:\"none\",value:this.state.parking,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}},parking.map(function(option){return React.createElement(MenuItem,{key:option.value,value:option.value},option.label);}))),React.createElement(Grid,{item:true,xs:12},React.createElement(FormControlLabel,{control:React.createElement(CheckboxValidatorElement,{color:\"primary\",name:\"accept\",validators:['isTruthy'],errorMessages:['This field is required'],onChange:this.handleCheckboxChange,checked:this.state.accept,value:this.state.accept}),label:\"I Accept\"}),React.createElement(Link,{component:\"button\",variant:\"body2\",onClick:function onClick(){alert(\"Hi, I'm Terms and conditions.\");}},\"Terms and Conditions\")),React.createElement(Grid,{item:true,xs:12,align:\"center\"},React.createElement(Button,{className:\"blueButton\",color:\"primary\",variant:\"contained\",type:\"submit\"},\"SUBMIT FORM\")))));}}]);return Register;}(React.Component);export default withStyles(useStyles)(Register);","map":{"version":3,"sources":["/Users/oscar/Desktop/test/Tempify/client/src/components/Register/DentalRegister.js"],"names":["React","Grid","Typography","TextField","FormControlLabel","Checkbox","withStyles","MenuItem","Button","Link","ValidatorForm","TextValidator","CheckboxValidatorElement","useStyles","theme","textField","width","marginLeft","spacing","marginRight","label","color","labelAsterisk","focused","outlinedInput","border","notchedOutline","button","margin","input","display","parking","value","Register","props","submitForm","event","preventDefault","data","officeName","state","email","password","name","phone","streetNo","streetName","unit","city","province","postalCode","fetch","method","headers","body","JSON","stringify","then","response","console","log","catch","err","history","push","handleChange","e","setState","target","handleCheckboxChange","accept","checked","confirmPassword","bind","addValidationRule","removeValidationRule","classes","shrink","root","asterisk","map","option","alert","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport './Register.css'\nimport CheckboxValidatorElement from '../CheckboxValidatorElement/CheckboxValidatorElement';\n\nconst useStyles = theme => ({\n  textField: {\n    width: '100%',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  label: {\n    '&$focused': {\n      color: '#00bfff'\n    },\n  },\n  labelAsterisk: {\n    color: '#ff0000'\n  },\n  focused: {},\n  outlinedInput: {\n    '&$focused $notchedOutline': {\n      border: '1px solid #00bfff'\n    },\n  },\n  notchedOutline: {},\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nconst parking = [\n  {\n    value: 'Free',\n    label: 'Free',\n  },\n  {\n    value: 'Paid/Street',\n    label: 'Paid/Street',\n  },\n  {\n    value: 'No Parking',\n    label: 'No Parking',\n  },\n];\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      officeName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      phone: '',\n      streetNo: '',\n      streetName: '',\n      unit: '',\n      city: '',\n      province: '',\n      postalCode: '',\n      parking: parking[0].value,\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n      if(value !== this.state.password) {\n        return false;\n      } \n      return true;\n    });\n    ValidatorForm.addValidationRule('isTruthy', value => value);\n\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule('isPasswordMatch');\n    ValidatorForm.removeValidationRule('isTruthy');\n  }\n\n  submitForm = (event) => {\n    event.preventDefault();\n\n    var data = {\n        officeName: this.state.officeName,\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name,\n        phone: this.state.phone,\n        streetNo: this.state.streetNo,\n        streetName: this.state.streetName,\n        unit: this.state.unit,\n        city: this.state.city,\n        province: this.state.province,\n        postalCode: this.state.postalCode,\n        parking: this.state.parking,\n    }\n    fetch(\"http://localhost:3001/dentalRegister\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(function(response) {\n      console.log(response);\n    }).then(function(data) {\n      console.log(data);\n    }).catch(function(err) {\n        console.log(err);\n    });\n    this.props.history.push(\"/\");\n  }\n\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleCheckboxChange = (e) => {\n    this.setState({accept: e.target.checked})\n  }\n\n  render() {\n\n    const { classes } = this.props;\n    return (\n      <div className=\"register\">\n        <ValidatorForm ref=\"form\" onSubmit={(e) => this.submitForm(e)}>\n          <Typography align=\"center\" className=\"header1\">\n            DENTAL OFFICE REGISTRATION\n          </Typography>\n\n          <Grid container spacing={6} className=\"container1\">\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"officeName\"\n                name=\"officeName\"\n                value={this.state.officeName}\n                label=\"Office Name\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"name\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"email\"\n                name=\"email\"\n                value={this.state.email}\n                label=\"Email address\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"email\"\n                validators={['required', 'isEmail']}\n                errorMessages={['This field is required', 'This is not a valid email']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                type=\"password\"\n                label=\"Password\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={this.state.confirmPassword}\n                type=\"password\"\n                label=\"Confirm password\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                validators={['required', 'isPasswordMatch']}\n                errorMessages={['This field is required', 'Passwords do not match']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"name\"\n                name=\"name\"\n                value={this.state.name}\n                label=\"Your name\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"name\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"phone\"\n                name=\"phone\"\n                label=\"Phone\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.phone}\n                validators={['required', 'minStringLength:10', 'minStringLength:10', 'isNumber']}\n                errorMessages={['This field is required', 'Value should be 10 digits', 'Value should be 10 digits', 'Must be a number']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"streetNo\"\n                name=\"streetNo\"\n                label=\"Street Number\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.streetNo}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n              </TextValidator>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"streetName\"\n                name=\"streetName\"\n                label=\"Street Name\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.streetName}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n              </TextValidator>\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"unit\"\n                name=\"unit\"\n                value={this.state.unit}\n                label=\"Unit\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"city\"\n                name=\"city\"\n                label=\"City\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.city}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n              </TextValidator>\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"province\"\n                name=\"province\"\n                label=\"Province\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.province}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n              </TextValidator>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"postalCode\"\n                name=\"postalCode\"\n                label=\"Postal Code\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.postalCode}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n              </TextValidator>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                select\n                id=\"parking\"\n                name=\"parking\"\n                label=\"Parking\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.parking}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n              {parking.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n              </TextValidator>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<CheckboxValidatorElement color=\"primary\" name=\"accept\" validators={['isTruthy']}\n                errorMessages={['This field is required']}\n                onChange={this.handleCheckboxChange}\n                checked={this.state.accept}\n                value={this.state.accept} />}\n                label=\"I Accept\"\n              />\n              <Link\n                component=\"button\"\n                variant=\"body2\"\n                onClick={() => {\n                  alert(\"Hi, I'm Terms and conditions.\");\n                }}>\n                Terms and Conditions\n              </Link>\n            </Grid>\n            <Grid item xs={12} align=\"center\">\n              <Button className=\"blueButton\" color=\"primary\" variant=\"contained\" type=\"submit\">\n                SUBMIT FORM\n              </Button>\n            </Grid>\n          </Grid>\n        </ValidatorForm>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(useStyles)(Register);"]},"metadata":{},"sourceType":"module"}