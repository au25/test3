{"ast":null,"code":"import _defineProperty from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/oscar/Desktop/test/Tempify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import TextField from'@material-ui/core/TextField';import FormControlLabel from'@material-ui/core/FormControlLabel';import Checkbox from'@material-ui/core/Checkbox';import{withStyles}from'@material-ui/core/styles';import MenuItem from'@material-ui/core/MenuItem';import Button from'@material-ui/core/Button';import Link from'@material-ui/core/Link';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import{Redirect}from'react-router';import'./Register.css';import CheckboxValidatorElement from'../CheckboxValidatorElement/CheckboxValidatorElement';var useStyles=function useStyles(theme){return{textField:{width:'100%',marginLeft:theme.spacing(1),marginRight:theme.spacing(1)},label:{'&$focused':{color:'#00bfff'}},labelAsterisk:{color:'#ff0000'},focused:{},outlinedInput:{'&$focused $notchedOutline':{border:'1px solid #00bfff'}},notchedOutline:{},button:{margin:theme.spacing(1)},input:{display:'none'}};};var city=[{value:'Vancouver',label:'Vancouver'},{value:'North Vancouver',label:'North Vancouver'},{value:'New Westminster',label:'New Westminster'},{value:'Tri-Cities',label:'Tri-Cities'},{value:'Surrey',label:'Surrey'},{value:'Richmond',label:'Richmond'},{value:'White Rock',label:'White Rock'},{value:'Langley(Fraser Valley)',label:'Langley(Fraser Valley)'}];var role=[{value:'none',label:'- What do you do? -'},{value:'Assistant',label:'Assistant'},{value:'Registered Dental Hygienist',label:'Registered Dental Hygienist'},{value:'Receptionist',label:'Receptionist'}];var practice=[{value:'General',label:'General'},{value:'Ortho',label:'Ortho'},{value:'Endo',label:'Endo'}];var dentalsw=[{value:'none',label:'- Dental Software Used -'},{value:'Dentrix',label:'Dentrix'},{value:'Cleardent',label:'Cleardent'},{value:'Tracker',label:'Tracker'},{value:'Other',label:'Other'},{value:'None',label:'None'}];var Register=/*#__PURE__*/function(_React$Component){_inherits(Register,_React$Component);function Register(props){var _this;_classCallCheck(this,Register);_this=_possibleConstructorReturn(this,_getPrototypeOf(Register).call(this,props));_this.submitForm=function(event){event.preventDefault();var data={name:_this.state.name,email:_this.state.email,password:_this.state.password,experience:_this.state.experience,expectedRate:_this.state.expectedRate,city:_this.state.city,role:_this.state.role,license:_this.state.license,practice:_this.state.practice,dentalsw:_this.state.dentalsw};fetch(\"http://localhost:3001/tempRegister\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){console.log(response);}).then(function(data){console.log(data);}).catch(function(err){console.log(err);});_this.props.history.push(\"/\");};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.handleCheckboxChange=function(e){_this.setState({accept:e.target.checked});};_this.state={name:'',email:'',password:'',confirmPassword:'',experience:'',expectedRate:'',city:city[0].value,role:role[0].value,license:'',practice:practice[0].value,dentalsw:dentalsw[0].value,accept:false,error:''};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(Register,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;ValidatorForm.addValidationRule('isPasswordMatch',function(value){if(value!==_this2.state.password){return false;}return true;});ValidatorForm.addValidationRule('isTruthy',function(value){return value;});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){ValidatorForm.removeValidationRule('isPasswordMatch');ValidatorForm.removeValidationRule('isTruthy');}},{key:\"render\",value:function render(){var _this3=this;var classes=this.props.classes;return React.createElement(\"div\",{className:\"register\"},React.createElement(ValidatorForm,{ref:\"form\",onSubmit:function onSubmit(e){return _this3.submitForm(e);}},React.createElement(Typography,{align:\"center\",className:\"header1\"},\"TEMP REGISTRATION\"),React.createElement(Typography,{align:\"center\",style:{color:'red'}},this.state.error),React.createElement(Grid,{container:true,spacing:6,className:\"container1\"},React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"name\",name:\"name\",value:this.state.name,label:\"Your name\",className:classes.textField,margin:\"normal\",variant:\"outlined\",autoComplete:\"name\",validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"email\",name:\"email\",value:this.state.email,label:\"Email address\",className:classes.textField,margin:\"normal\",variant:\"outlined\",autoComplete:\"email\",validators:['required','isEmail'],errorMessages:['This field is required','This is not a valid email'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"password\",name:\"password\",value:this.state.password,type:\"password\",label:\"Password\",className:classes.textField,margin:\"normal\",variant:\"outlined\",validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"confirmPassword\",name:\"confirmPassword\",value:this.state.confirmPassword,type:\"password\",label:\"Confirm password\",className:classes.textField,margin:\"normal\",variant:\"outlined\",validators:['required','isPasswordMatch'],errorMessages:['This field is required','Passwords do not match'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"experience\",name:\"experience\",type:\"number\",label:\"Years of experience\",className:classes.textField,margin:\"normal\",variant:\"outlined\",value:this.state.experience,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"expRate\",name:\"expectedRate\",label:\"Expected rate [$]\",className:classes.textField,margin:\"normal\",variant:\"outlined\",value:this.state.expectedRate,validators:['required','minNumber:20','maxNumber:60'],errorMessages:['This field is required','Value should be between 20 and 60','Value should be between 20 and 60'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,select:true,id:\"city\",name:\"city\",label:\"Select city\",className:classes.textField,margin:\"normal\",variant:\"outlined\",defaultValue:\"none\",value:this.state.city,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}},city.map(function(option){return React.createElement(MenuItem,{key:option.value,value:option.value},option.label);}))),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,select:true,id:\"role\",name:\"role\",label:\"Required\",className:classes.textField,margin:\"normal\",variant:\"outlined\",defaultValue:\"none\",value:this.state.role,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}},role.map(function(option){return React.createElement(MenuItem,{key:option.value,value:option.value},option.label);}))),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,id:\"license\",name:\"license\",value:this.state.license,label:\"Required\",placeholder:\"License number?\",className:classes.textField,margin:\"normal\",variant:\"outlined\",validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}})),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,select:true,id:\"practice\",name:\"practice\",label:\"Required\",className:classes.textField,margin:\"normal\",variant:\"outlined\",defaultValue:\"none\",value:this.state.practice,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}},practice.map(function(option){return React.createElement(MenuItem,{key:option.value,value:option.value},option.label);}))),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(TextValidator,{required:true,fullWidth:true,select:true,id:\"dentalsw\",name:\"dentalsw\",label:\"Required\",className:classes.textField,margin:\"normal\",variant:\"outlined\",defaultValue:\"none\",value:this.state.dentalsw,validators:['required'],errorMessages:['This field is required'],onChange:this.handleChange,InputLabelProps:{shrink:true,classes:{root:classes.label,focused:classes.focused,asterisk:classes.labelAsterisk}},InputProps:{classes:{root:classes.outlinedInput,focused:classes.focused,notchedOutline:classes.notchedOutline}}},dentalsw.map(function(option){return React.createElement(MenuItem,{key:option.value,value:option.value,disabled:option.disabled},option.label);}))),React.createElement(Grid,{item:true,xs:12,sm:6,className:\"container2\"},React.createElement(\"input\",{accept:\"./image/*\",id:\"image-upload\",multiple:true,type:\"file\"})),React.createElement(Grid,{item:true,xs:12},React.createElement(FormControlLabel,{control:React.createElement(CheckboxValidatorElement,{color:\"primary\",name:\"accept\",validators:['isTruthy'],errorMessages:['This field is required'],onChange:this.handleCheckboxChange,checked:this.state.accept,value:this.state.accept}),label:\"I Accept\"}),React.createElement(Link,{component:\"button\",variant:\"body2\",onClick:function onClick(){alert(\"Hi, I'm Terms and conditions.\");}},\"Terms and Conditions\")),React.createElement(Grid,{item:true,xs:12,align:\"center\"},React.createElement(Button,{className:\"blueButton\",color:\"primary\",variant:\"contained\",type:\"submit\"},\"SUBMIT FORM\")))));}}]);return Register;}(React.Component);export default withStyles(useStyles)(Register);","map":{"version":3,"sources":["/Users/oscar/Desktop/test/Tempify/client/src/components/Register/TempRegister.js"],"names":["React","Grid","Typography","TextField","FormControlLabel","Checkbox","withStyles","MenuItem","Button","Link","ValidatorForm","TextValidator","Redirect","CheckboxValidatorElement","useStyles","theme","textField","width","marginLeft","spacing","marginRight","label","color","labelAsterisk","focused","outlinedInput","border","notchedOutline","button","margin","input","display","city","value","role","practice","dentalsw","Register","props","submitForm","event","preventDefault","data","name","state","email","password","experience","expectedRate","license","fetch","method","headers","body","JSON","stringify","then","response","console","log","catch","err","history","push","handleChange","e","setState","target","handleCheckboxChange","accept","checked","confirmPassword","error","bind","addValidationRule","removeValidationRule","classes","shrink","root","asterisk","map","option","disabled","alert","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport { Redirect } from 'react-router';\nimport './Register.css'\nimport CheckboxValidatorElement from '../CheckboxValidatorElement/CheckboxValidatorElement';\n\nconst useStyles = theme => ({\n  textField: {\n    width: '100%',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  label: {\n    '&$focused': {\n      color: '#00bfff'\n    },\n  },\n  labelAsterisk: {\n    color: '#ff0000'\n  },\n  focused: {},\n  outlinedInput: {\n    '&$focused $notchedOutline': {\n      border: '1px solid #00bfff'\n    },\n  },\n  notchedOutline: {},\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nconst city = [\n  {\n    value: 'Vancouver',\n    label: 'Vancouver',\n  },\n  {\n    value: 'North Vancouver',\n    label: 'North Vancouver',\n  },\n  {\n    value: 'New Westminster',\n    label: 'New Westminster',\n  },\n  {\n    value: 'Tri-Cities',\n    label: 'Tri-Cities',\n  },\n  {\n    value: 'Surrey',\n    label: 'Surrey',\n  },\n  {\n    value: 'Richmond',\n    label: 'Richmond',\n  },\n  {\n    value: 'White Rock',\n    label: 'White Rock',\n  },\n  {\n    value: 'Langley(Fraser Valley)',\n    label: 'Langley(Fraser Valley)',\n  },\n];\n\nconst role = [\n  {\n    value: 'none',\n    label: '- What do you do? -',\n  },\n  {\n    value: 'Assistant',\n    label: 'Assistant',\n  },\n  {\n    value: 'Registered Dental Hygienist',\n    label: 'Registered Dental Hygienist',\n  },\n  {\n    value: 'Receptionist',\n    label: 'Receptionist',\n  },\n];\n\nconst practice = [\n  {\n    value: 'General',\n    label: 'General',\n  },\n  {\n    value: 'Ortho',\n    label: 'Ortho',\n  },\n  {\n    value: 'Endo',\n    label: 'Endo',\n  },\n];\n\nconst dentalsw = [\n  {\n    value: 'none',\n    label: '- Dental Software Used -',\n  },\n  {\n    value: 'Dentrix',\n    label: 'Dentrix',\n  },\n  {\n    value: 'Cleardent',\n    label: 'Cleardent',\n  },\n  {\n    value: 'Tracker',\n    label: 'Tracker',\n  },\n  {\n    value: 'Other',\n    label: 'Other',\n  },\n  {\n    value: 'None',\n    label: 'None',\n  },\n];\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      experience: '',\n      expectedRate: '',\n      city: city[0].value,\n      role: role[0].value,\n      license: '',\n      practice: practice[0].value,\n      dentalsw: dentalsw[0].value,\n      accept: false,\n      error: '',\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n      if(value !== this.state.password) {\n        return false;\n      } \n      return true;\n    });\n    ValidatorForm.addValidationRule('isTruthy', value => value);\n  }\n\n  componentWillUnmount() {\n    ValidatorForm.removeValidationRule('isPasswordMatch');\n    ValidatorForm.removeValidationRule('isTruthy');\n  }\n\n  submitForm = (event) => {\n    event.preventDefault();\n\n    var data = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      experience: this.state.experience,\n      expectedRate: this.state.expectedRate,\n      city: this.state.city,\n      role: this.state.role,\n      license: this.state.license,\n      practice: this.state.practice,\n      dentalsw: this.state.dentalsw\n    }\n    fetch(\"http://localhost:3001/tempRegister\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(function(response) {\n      console.log(response);\n    }).then(function(data) {\n      console.log(data);\n    }).catch(function(err) {\n        console.log(err);\n    });\n    this.props.history.push(\"/\");\n  }\n\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleCheckboxChange = (e) => {\n    this.setState({accept: e.target.checked})\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className=\"register\">\n        <ValidatorForm ref=\"form\" onSubmit={(e) => this.submitForm(e)}>\n          <Typography align=\"center\" className=\"header1\">\n            TEMP REGISTRATION\n          </Typography>\n          <Typography align=\"center\" style={{color: 'red'}}>\n            {this.state.error}\n          </Typography>\n          <Grid container spacing={6} className=\"container1\">\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"name\"\n                name=\"name\"\n                value={this.state.name}\n                label=\"Your name\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"name\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"email\"\n                name=\"email\"\n                value={this.state.email}\n                label=\"Email address\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"email\"\n                validators={['required', 'isEmail']}\n                errorMessages={['This field is required', 'This is not a valid email']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                type=\"password\"\n                label=\"Password\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={this.state.confirmPassword}\n                type=\"password\"\n                label=\"Confirm password\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                validators={['required', 'isPasswordMatch']}\n                errorMessages={['This field is required', 'Passwords do not match']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"experience\"\n                name=\"experience\"\n                type=\"number\"\n                label=\"Years of experience\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.experience}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"expRate\"\n                name=\"expectedRate\"\n                label=\"Expected rate [$]\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.expectedRate}\n                validators={['required', 'minNumber:20', 'maxNumber:60']}\n                errorMessages={['This field is required', 'Value should be between 20 and 60', 'Value should be between 20 and 60']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            \n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                select\n                id=\"city\"\n                name=\"city\"\n                label=\"Select city\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.city}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n                {city.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextValidator>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                select\n                id=\"role\"\n                name=\"role\"\n                label=\"Required\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.role}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n                {role.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextValidator>\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                id=\"license\"\n                name=\"license\"\n                value={this.state.license}\n                label=\"Required\"\n                placeholder=\"License number?\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                select\n                id=\"practice\"\n                name=\"practice\"\n                label=\"Required\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.practice}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n                {practice.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextValidator>\n            </Grid>\n\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <TextValidator\n                required\n                fullWidth\n                select\n                id=\"dentalsw\"\n                name=\"dentalsw\"\n                label=\"Required\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                defaultValue=\"none\"\n                value={this.state.dentalsw}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                onChange={this.handleChange}\n                InputLabelProps={{\n                  shrink: true,\n                  classes: {\n                    root: classes.label,\n                    focused: classes.focused,\n                    asterisk: classes.labelAsterisk,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.outlinedInput,\n                    focused: classes.focused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              >\n                {dentalsw.map(option => (\n                  <MenuItem key={option.value} value={option.value} disabled={option.disabled}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextValidator>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"container2\">\n              <input\n                accept=\"./image/*\"\n                id=\"image-upload\"\n                multiple\n                type=\"file\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<CheckboxValidatorElement color=\"primary\" name=\"accept\" validators={['isTruthy']}\n                errorMessages={['This field is required']}\n                onChange={this.handleCheckboxChange}\n                checked={this.state.accept}\n                value={this.state.accept} />}\n                label=\"I Accept\"\n              />\n              <Link\n                component=\"button\"\n                variant=\"body2\"\n                onClick={() => {\n                  alert(\"Hi, I'm Terms and conditions.\");\n                }}>\n                Terms and Conditions\n              </Link>\n            </Grid>\n            <Grid item xs={12} align=\"center\">\n              <Button className=\"blueButton\" color=\"primary\" variant=\"contained\" type=\"submit\">\n                SUBMIT FORM\n              </Button>\n            </Grid>\n          </Grid>\n        </ValidatorForm>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(useStyles)(Register);"]},"metadata":{},"sourceType":"module"}