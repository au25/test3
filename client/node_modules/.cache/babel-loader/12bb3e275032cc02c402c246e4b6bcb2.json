{"ast":null,"code":"var _jsxFileName = \"/Users/oscar/Desktop/test/Tempify/client/src/components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport './Login.css';\nimport PasswordModal from '../PasswordModal/PasswordModal';\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 1),\n    backgroundColor: \"#00bfff\",\n    display: 'block',\n    marginTop: '20px',\n    '&:hover': {\n      background: \"#404040\"\n    }\n  },\n  textField: {\n    marginLeft: theme.spacing.unit * 3,\n    marginBottom: '0px'\n  },\n  label: {\n    '&$focused': {\n      color: '#00bfff'\n    }\n  },\n  focused: {},\n  outlinedInput: {\n    '&$focused $notchedOutline': {\n      border: '1px solid #00bfff'\n    }\n  },\n  notchedOutline: {}\n});\n\nclass LoginTemp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateInputValue = this.updateInputValue.bind(this);\n  }\n\n  handleSubmit(e) {\n    this.setState({\n      message: 'Sending...',\n      submitted: true\n    }, this.submitFormData);\n  }\n\n  updateInputValue(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"sm\",\n      className: \"login_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      className: \"login_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"LOGIN WITH YOUR EMAIL ACCOUNT\"), React.createElement(\"form\", {\n      className: classes.form,\n      onSubmit: e => this.props.onLogin(e, {\n        email: this.state.email,\n        password: this.state.password\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: this.updateInputValue,\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      label: \"Email Address\",\n      type: \"text\",\n      name: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      className: \"classes.loginEmail\",\n      InputLabelProps: {\n        classes: {\n          root: classes.label,\n          focused: classes.focused\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      onChange: this.updateInputValue,\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      className: \"loginPassword\",\n      InputLabelProps: {\n        classes: {\n          root: classes.label,\n          focused: classes.focused\n        }\n      },\n      InputProps: {\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.focused,\n          notchedOutline: classes.notchedOutline\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }),\n      label: \"Remember me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(PasswordModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"LOGIN\"))));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(LoginTemp);","map":{"version":3,"sources":["/Users/oscar/Desktop/test/Tempify/client/src/components/Login/Login.js"],"names":["React","Component","Button","TextField","FormControlLabel","Checkbox","Typography","withStyles","Container","PasswordModal","styles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","background","textField","marginLeft","unit","marginBottom","label","color","focused","outlinedInput","border","notchedOutline","LoginTemp","constructor","props","state","email","password","handleSubmit","bind","updateInputValue","e","setState","message","submitted","submitFormData","target","name","value","render","classes","onLogin","root","withTheme"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport './Login.css';\nimport PasswordModal from '../PasswordModal/PasswordModal'\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 1),\n    backgroundColor: \"#00bfff\",\n    display: 'block',\n    marginTop: '20px',\n    '&:hover': {\n      background: \"#404040\",\n    }\n  },\n  textField: {\n    marginLeft: theme.spacing.unit * 3,\n    marginBottom: '0px',\n  },\n  label: {\n    '&$focused': {\n      color: '#00bfff'\n    },\n  },\n  focused: {},\n  outlinedInput: {\n    '&$focused $notchedOutline': {\n      border: '1px solid #00bfff'\n    },\n  },\n  notchedOutline: {},\n\n});\n\nclass LoginTemp extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateInputValue = this.updateInputValue.bind(this);\n  }\n\n  handleSubmit(e) {\n    this.setState({ \n      message: 'Sending...',\n      submitted: true\n    }, \n      this.submitFormData);\n  }\n\n  updateInputValue(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <Container component=\"main\" maxWidth=\"sm\" className=\"login_container\">\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\" className=\"login_title\">\n            LOGIN WITH YOUR EMAIL ACCOUNT\n          </Typography>\n          <form \n            className={classes.form}        \n            onSubmit = {e => \n                this.props.onLogin(e, {\n                  email: this.state.email,\n                  password: this.state.password\n                }) \n              }>\n            <TextField\n              onChange= {this.updateInputValue}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Email Address\"\n              type = \"text\" \n              name = \"email\"\n              autoComplete=\"email\"\n              autoFocus\n              className =\"classes.loginEmail\"\n              InputLabelProps={{\n                classes: {\n                  root: classes.label,\n                  focused: classes.focused,\n                },\n              }}\n              InputProps={{\n                classes: {\n                  root: classes.outlinedInput,\n                  focused: classes.focused,\n                  notchedOutline: classes.notchedOutline,\n                },\n              }}\n            />\n            <TextField\n              onChange= {this.updateInputValue}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              type = \"password\" \n              name = \"password\"\n              label=\"Password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              className =\"loginPassword\"\n              InputLabelProps={{\n                classes: {\n                  root: classes.label,\n                  focused: classes.focused,\n                },\n              }}\n              InputProps={{\n                classes: {\n                  root: classes.outlinedInput,\n                  focused: classes.focused,\n                  notchedOutline: classes.notchedOutline,\n                },\n              }}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"default\" />}\n              label=\"Remember me\"\n            />\n            <PasswordModal/>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              LOGIN\n            </Button>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(LoginTemp);\n"]},"metadata":{},"sourceType":"module"}