{"ast":null,"code":"var _jsxFileName = \"/Users/oscar/Desktop/Tempify/Tempify/client/src/components/Modal/Modal.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { Link } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport './Modal.css';\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        setOpen: true\n      });\n    };\n\n    this.handleClickClose = () => {\n      this.setState({\n        setOpen: false\n      });\n    };\n\n    this.state = {\n      setOpen: false,\n      open: false\n    };\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClickClose = this.handleClickClose.bind(this);\n  }\n\n  renderButton(param) {\n    switch (param) {\n      case 'blueButton':\n        return React.createElement(Button, {\n          className: \"modal-blueButton\",\n          onClick: this.handleClickOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, this.props.name);\n\n      case 'clearButton':\n        return React.createElement(Button, {\n          className: \"modal-clearButton\",\n          onClick: this.handleClickOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, this.props.name);\n\n      case 'typography':\n        return React.createElement(Typography, {\n          variant: \"subheading\",\n          onClick: this.handleClickOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.props.name);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.renderButton(this.props.idType), React.createElement(Dialog, {\n      open: this.state.setOpen,\n      keepMounted: true,\n      onClose: this.handleClickClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      className: \"modal-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" Welcome To Tempify\")), React.createElement(Button, {\n      onClick: this.handleClickClose,\n      className: \"modal-login-blueButton\",\n      component: Link,\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Button, {\n      onClick: this.handleClickClose,\n      className: \"modal-register-blueButton\",\n      component: Link,\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Register\"))));\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/oscar/Desktop/Tempify/Tempify/client/src/components/Modal/Modal.js"],"names":["React","Component","Button","Dialog","DialogContent","Link","Typography","Modal","constructor","props","handleClickOpen","setState","setOpen","handleClickClose","state","open","bind","renderButton","param","name","render","idType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport {Link} from 'react-router-dom';\nimport {\n Typography\n} from '@material-ui/core';\n\nimport './Modal.css';\n\nclass Modal extends Component{\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      setOpen: false,\n      open: false\n    }\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClickClose = this.handleClickClose.bind(this);\n  }\n\n  handleClickOpen = () => {\n    this.setState({\n      setOpen: true\n    });\n  };\n\n  handleClickClose = () => {\n    this.setState({\n      setOpen: false\n    });\n  };\n\n  renderButton(param) {\n\n    switch(param) {\n      case 'blueButton':\n        return (\n          <Button\n            className=\"modal-blueButton\"\n            onClick={this.handleClickOpen}\n          >\n            {this.props.name}\n          </Button>\n        )\n      case 'clearButton':\n        return (\n          <Button\n          className=\"modal-clearButton\"\n          onClick={this.handleClickOpen}\n        >\n          {this.props.name}\n        </Button>\n          )\n      case 'typography':\n        return (\n          <Typography variant = \"subheading\" onClick={this.handleClickOpen}>\n            {this.props.name}\n          </Typography>);\n    }\n  }\n    \n  render() {\n\n    return (\n      <div >\n        {this.renderButton(this.props.idType)}\n\n        <Dialog\n          open={this.state.setOpen}\n          keepMounted\n          onClose={this.handleClickClose}\n        >\n          <DialogContent className = \"modal-container\">\n            <div> \n              <p className= \"modal-title\"> Welcome To Tempify</p>\n            </div>\n            <Button onClick={this.handleClickClose} className = \"modal-login-blueButton\" component={Link} to=\"/login\">\n              Login\n            </Button>\n            <Button onClick={this.handleClickClose} className = \"modal-register-blueButton\" component={Link} to=\"/register\">\n              Register\n            </Button>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}